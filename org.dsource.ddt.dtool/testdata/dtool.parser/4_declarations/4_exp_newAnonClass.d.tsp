▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂ basic case
#PARSE(EXPRESSION)   new class (#@ARGS__SAMPLE) MyClass, basetype2 #@DECLS_BLOCK__SAMPLE
#STRUCTURE_EXPECTED: ExpNewAnonClass(#@ARGS__SAMPLE RefIdentifier RefIdentifier #@DECLS_BLOCK__SAMPLE )
Ⓗ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂ 
#@ALLOC_ARGS《
  ► ●
  ►#?STRUCTURE_EXPECTED!【(#@ARGS__SAMPLE)● #@ARGS__SAMPLE】●
  ►#?STRUCTURE_EXPECTED!【(#@ARGS__SAMPLE #@NO_ClosePARENS ● #@ARGS__SAMPLE】●
  ►#?STRUCTURE_EXPECTED!【(#error(EXP_CLOSE_PARENS) ● 】●
¤》
#@CLASS_ARGS《
  ► ●
  ►#?STRUCTURE_EXPECTED!【(#@ARGS__SAMPLE)● #@ARGS__SAMPLE】●
¤》

#@FROM_CLASS_KEYWORD《
  ►#?STRUCTURE_EXPECTED!【#@CLASS_ARGS #@DECLS_BLOCK● #@CLASS_ARGS #@DECLS_BLOCK】●
  ►#?STRUCTURE_EXPECTED!【(#@ARGS__SAMPLE #error(EXP_CLOSE_PARENS) #@BREAK #@DECLS_BLOCK● #@ARGS__SAMPLE #@BREAK】●
  
  ►#?STRUCTURE_EXPECTED!【#@CLASS_ARGS #@TYPEREFS_NB__LITE #@DECLS_BLOCK ● #@CLASS_ARGS #@TYPEREFS_NB__LITE #@DECLS_BLOCK】●
  ►#?STRUCTURE_EXPECTED!【#@TYPEREFS_NB_ORNO__LITE, #@TYPEREFS_NB_ORNO #@DECLS_BLOCK__SAMPLE ● #@TYPEREFS_NB_ORNO__LITE  #@TYPEREFS_NB_ORNO #@DECLS_BLOCK__SAMPLE】●
  ►#?STRUCTURE_EXPECTED!【int[foo #@NO_CloseBRACKET #@DECLS_BLOCK__SAMPLE ● RefIndexing(RefPrimitive RefIdentifier) #@DECLS_BLOCK__SAMPLE】●
¤》
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂ duplicate test for clarity
#PARSE(EXPRESSION)    new (#@ARGS__SAMPLE) #@NO_REF
#STRUCTURE_EXPECTED:  ExpNew( #@ARGS__SAMPLE #@NO_REF )
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂ 
#PARSE(EXPRESSION)    new #@ALLOC_ARGS class #@DECLS_BLOCK__SAMPLE
#STRUCTURE_EXPECTED:  ExpNewAnonClass( #@ALLOC_ARGS #@DECLS_BLOCK__SAMPLE)
▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂ 
#PARSE(EXPRESSION)    new (#@ARGS__SAMPLE) class #@FROM_CLASS_KEYWORD
#STRUCTURE_EXPECTED:  ExpNewAnonClass( #@ARGS__SAMPLE #@FROM_CLASS_KEYWORD )