Ⓗ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

#@EXP_ARGS《
 ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_ANY ● #@ASSIGNEXP_ANY 】●
 ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NB__LITE , #@ASSIGNEXP_ANY● #@ASSIGNEXP_NB__LITE #@ASSIGNEXP_ANY】●
 ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP__LITE, #@ASSIGNEXP__LITE, #@ASSIGNEXP__LITE● #@ASSIGNEXP__LITE #@ASSIGNEXP__LITE #@ASSIGNEXP__LITE 】●
¤》
#@EXP_ARGS__SAMPLE《
 ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP__LITE, #@ASSIGNEXP__LITE ● #@ASSIGNEXP__LITE #@ASSIGNEXP__LITE 】●
¤》
#@ARGS__SAMPLE《
  ►#?STRUCTURE_EXPECTED!【#@EXP_ASSIGN__LITE, 123 + "foo"● #@EXP_ASSIGN__LITE ExpInfix(Integer String)】●
¤》

#@EXPARGS_NE_ESEP《
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_ANY   ● #@ASSIGNEXP_ANY】 ●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NB  , ● #@ASSIGNEXP_NB】 ●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NB__LITE , #@ASSIGNEXP_NBNE__LITE #@《 ●,》 ● #@ASSIGNEXP_NB__LITE #@ASSIGNEXP_NBNE__LITE】 ●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NB__LITE , #@ASSIGNEXP_NB__LITE , #@ASSIGNEXP__LITE ● 
                         #@ASSIGNEXP_NB__LITE   #@ASSIGNEXP_NB__LITE   #@ASSIGNEXP__LITE】 ●
¤》 

// Expression list which allows ending terminator
#@EXPARGS_ESEP《
  ►#?STRUCTURE_EXPECTED!【/* NO EXTRA ARG */ ● 】●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NBNE #@《 ●,》● #@ASSIGNEXP_NBNE】 ●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NB__LITE , #@ASSIGNEXP_NBNE__LITE #@《 ●,》 ● #@ASSIGNEXP_NB__LITE #@ASSIGNEXP_NBNE__LITE】 ●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NB__LITE , #@ASSIGNEXP_NB__LITE , #@ASSIGNEXP_NBNE ● 
                         #@ASSIGNEXP_NB__LITE   #@ASSIGNEXP_NB__LITE   #@ASSIGNEXP_NBNE】 ●
¤》 
#@EXPARGS_ESEP__SAMPLE《
  ►#?STRUCTURE_EXPECTED!【/* NO_EXTRA_ARG */ ● 】●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NBNE__LITE #@《 ●,》● #@ASSIGNEXP_NBNE__LITE】 ●
  ►#?STRUCTURE_EXPECTED!【#@ASSIGNEXP_NB__LITE , #@ASSIGNEXP_NBNE__LITE #@《 ●,》 ● #@ASSIGNEXP_NB__LITE #@ASSIGNEXP_NBNE__LITE】 ●
¤》 
#@EXPARGS_ESEP_ParensClose《
  ►#?STRUCTURE_EXPECTED!【 #@EXPARGS_ESEP ) ● #@EXPARGS_ESEP】●
  ►#?STRUCTURE_EXPECTED!【 #@EXPARGS_ESEP__SAMPLE #@PARENS_BREAK ● #@EXPARGS_ESEP__SAMPLE #@PARENS_BREAK】●
¤》 


// Simple variable declaration pattern - type optional
#@SIMPLE_VAR_PAT《
 ►#?STRUCTURE_EXPECTED!【#@DEFID_OrNO ● #@DEFID_OrNO 】●
 ►#?STRUCTURE_EXPECTED!【#@TYPEREF_NBNE #@DEFID ● #@TYPEREF_NBNE #@DEFID】●
 ►#?STRUCTURE_EXPECTED!【#@TYPEREF_NBNE__NoSingleDefId #@NO_DEFID ● #@TYPEREF_NBNE #@NO_DEFID】●
 ►#?STRUCTURE_EXPECTED!【#@TYPEREF_BROKEN ● #@TYPEREF_BROKEN #@NO_DEFID】●
¤》

// Simple variable declaration pattern - type required
#@SIMPLE_VAR_DEF《
 ►#?STRUCTURE_EXPECTED!【#@NO_TYPEREF /*NO_DEFID*/ ● SimpleVarDef(#@NO_TYPEREF #@NO_DEFID )】●
 ►#?STRUCTURE_EXPECTED!【 someId #@NO_DEFID ● SimpleVarDef(RefIdentifier #@NO_DEFID )】●
 ►#?STRUCTURE_EXPECTED!【#@TYPEREF_NBNE #@DEFID ● SimpleVarDef(#@TYPEREF_NBNE #@DEFID)】●
 ►#?STRUCTURE_EXPECTED!【#@TYPEREF_NBNE__NoSingleDefId #@NO_DEFID ● SimpleVarDef(#@TYPEREF_NBNE #@NO_DEFID)】●
 ►#?STRUCTURE_EXPECTED!【#@TYPEREF_BROKEN ● SimpleVarDef(#@TYPEREF_BROKEN #@NO_DEFID)】●
¤》

#@SIMPLE_VAR_DEF__SAMPLE《
 ►#?STRUCTURE_EXPECTED!【foo[bar] defid ● SimpleVarDef( RefIndexing(RefIdentifier RefIdentifier) #@DEFID ) 】●
¤》