<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
	
Ant script for automated release and deploy of update site. Sample usage:
First, Run the build script:
	mvn clean integration-test
Alternatively, use a version qualifier prefix:
	mvn clean integration-test -Dqualifier_default_prefix=PR1-

Run this repo upload script:
It requires a git repo of the project updateSite Git repo, as specified by -DupdateSiteGitRepo
	ant -f repo-release-script.xml uploadRelease -DupdateSiteGitRepo="../DDT/ddt.updates" -DcommitLog="new daily"
     ====================================================================== -->
<project name="project" >

	<property name="repoSrc" location="bin-maven/ddt.repository/repository" />

	<property name="gitLocation">git</property>
	
	<target name="echoInfo">
		<echo>${commitLog}</echo>
		<echo>${repoSrc}</echo>
	</target>

	<target name="uploadRelease" depends="commitReleaseToRepo">
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="push origin"/>
		</exec>
	</target>
	
	
	<target name="prep.repoDest">
		<fail unless="updateSiteGitRepo"/>
		<fail message="updateSiteGitRepo dir is missing.">
			<condition>
				<not>
					<available file="${updateSiteGitRepo}" type="dir" />
				</not>
			</condition>
		</fail>
		<property name="repoDest" location="${updateSiteGitRepo}/ddt.feature-repo" />
		<echo>${repoDest}</echo>
	</target>
	
	<target name="commitReleaseToRepo" depends="echoInfo, prep.repoDest">
		<fail unless="commitLog"/>

		<mkdir dir="${repoDest}"/> <!-- Seems like erroronmissingdir isn't working? -->
		<delete verbose="true">
			<fileset dir="${repoDest}" erroronmissingdir="false" includes="**/*.jar"/>
		</delete>
		<mkdir dir="${repoDest}"/>
		<copy verbose="true" todir="${repoDest}">
			<fileset dir="${repoSrc}"/>
		</copy>
		
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="status"/>
		</exec>
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="add -A *"/>
		</exec>
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="commit -m"/>
			<arg value="${commitLog}"/>
		</exec>
	</target>

	
<!-- ======================================================================
	This task must be run from within eclipse, example:
	eclipse -application org.eclipse.ant.core.antRunner -console -consolelog -f repo-release-script.xml createCompositeRepo -updateSiteGitRepo=../ddt.updates-PR
     ====================================================================== -->
	<target name="createCompositeRepo" depends="prep.repoDest">
		<p2.composite.repository>
			<repository location="${updateSiteGitRepo}" name="DDT repository" compressed="false" />
			<add>
				<repository location="http://download.eclipse.org/releases/kepler" />
				<repository location="ddt.feature-repo" />
			</add>
		</p2.composite.repository>
	</target>
	
</project>
