#summary ChangeLog for releases.

= DDT Change Log =

== DDT 0.7.1 (devel) ==
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=68 issue@ELabs #68]: Missing enum members in the outline view.
 * Fixed bug with implementation of issue #3 : support Debian Linux DMD layout.
 * Implemented: In DDoc view, the text of undefined macros now remains unmodified, instead of being replaced by empty text.
   * Example: {{{My $(NO_SUCH_MACRO undefined) macro}}} will render as {{{My $(NO_SUCH_MACRO undefined) macro}}} instead of {{{My  macro}}}
 * Implemented: In DDoc view, added predefined DDoc macro: {{{D}}}. Works the same as {{{D_CODE}}}.
 * Cleanup: changed some of the dialog messages for the Open Definition operation to be more clear and concise.
 * Fixed regression bug in editor resolving functionality where a reference would not be found if the cursor was at the very end of the reference.
   * Affects: Open Definition, Open Definition hyperlinks, References search, DDoc view hovers.
 * Cleanup: restricted some editor functionality to named references only (Open Definition, Open Definition hyperlinks, DDoc view hovers).
 * Implemented: Code Completion now presents language primitive results (void, int, char, etc.).
 * Cleanup: Added icon adornments for {{{const,immutable}}} attributes in variables.
 * Implemented: added icon adornment for templated types .
 * Cleanup: new icons for most D source elements, slight change to icon overlays. New icon for D search.
  * The new icon design is meant to better convey visual information for the semantics of the underlying element.

== DDT 0.7.0 (2013-08-15) ==
 * Requirements changes: now requires minimum Java VM version 1.7 .
 * Implemented issue #2: Support parsing of latest D syntax (up to D language version 2.063).
   * Completely rewrote D parser, creating a new hand-written parser (IDE no longer depends on descent.compiler).
 * Holding Ctrl and clicking over a reference now always opens a new editor on where the reference target is.
 * Fixed NPE bug when opening D search page with a package reference selected in the editor.
 * Fixed minor parser AFE bug with qualified reference at end of file.
 * Fixed minor bug when resolving modules without module declarations (implicit module name).
 * SITE: Moved project website from Eclipse Labs to normal Google Code: http://code.google.com/p/ddt/
 * -- released Preview Release 0.7.0 --
 * Added mixin template instance to listed model elements in UI (for example, outline)
 * Fixed bug in D Appearance preference page: var and funtions showing up as Structs in preview.
 * Fixed a bug with selective imports presenting all module symbols, not just the selected ones.
 * Code completion icons now consistent with the rest of the IDE UI:
  * (previously some decorators for storage classes or protection attributes were missing, and JDT like icons where not supported in Code Completion popup)
 * The -v2 switch is no longer included in default GDC build response file.
 * Implemented issue #3 : support Debian Linux DMD layout
 * Fixed code completion NPE bug with function declarations with missing syntax.
 * Fixed code completion NPE bug with conditional declarations/statements with missing bodies.
 * Fixed bug with the display text of function and template parameters in code completion popup.  

== DDT 0.6.0 (2012-05-17) ==
 * Fixed bug causing DDT to never load the pre-defined editor Code Templates.
 * Added support for GDC, as well as a generic compiler install. ([http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=59 issue@ELabs #59])
 * Added support for DMD Unix style compiler installs ("usr/bin/dmd" and similar). ([http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=56 issue@ELabs #56])
 * Fixed several bugs with the D Search Page (incorrect or missing search matches). 
 * Fixed bug of incorrect default text shown in D Search Page when editor cursor/selection was on a symbol definition.
 * Labels for D elements in the outline and quick outline now show type (for variables) and return type (for functions).
 * Icons for D elements in all viewers now show protection attribute info.
   * This can be configured (overlay for all elements, or JDT-style icon overlays) in the new Appearance preference page.
 * Fixed the Open D Type dialog so that it shows the standard D icons as the rest of the IDE.
 * Fixed parser NPE bug when using inout as const wildcard declarator.
 * Fixed parser error when "alias this" appeared as a statement.
 * Fixed bugs where parser and semantic engine ignored the parameters of constructors.
 * Fixed some invalid menu entries in editor context menu (entries for commands that are not implemented).
 * Modules without module declarations will now have their names inferred from their filename. ([http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=26 issue@ELabs #26])
 
== DDT 0.5.0 (2011-08-26) ==
 * Updated DDT to DTLK 3.0
 * Made icons of D source elements (classes, structs templates, etc.) consistent throughout the UI. 
   * (Previously DLTK views and some popups used simplified icons, and only CA and outline used more detailed icons.)
 * Outline view changes:
   * Now shows nested elements.
   * Clicking on named elements correctly selects their name in the editor (previously it just revealed the element).
   * Added context menu to the outline elements, added some filter actions to the toolbar of the view.
 * Constructor/Desctructors/Allocators/Deallocators now show up in Outline view and quick Outline.
 * Implemented [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=52 issue@ELabs #52]: function/delegate literals can now be folded. And also anonymous classes.
 * Fix in Documentation hovers: removed redudant text, and now displays concrete archetype (Class, Interface, Struct, Union), instead of "Aggregate".
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=47 issue@ELabs #47]: NPE while parsing is expression. Source ranges will still be missing though.
 * Fixed some minor NPE and assertion failure bugs.
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=51 issue@ELabs #51], parsing AssertFailedException.
 * Resolved #19 in a definite and proper way (instead of with a workaround hack).
 * Fixed some issues relate to completion of imports, including [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=53 issue@ELabs #53]. 
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=58 issue@ELabs #58]: typing the dot causes selected completion proposal to be applied.

== DDT 0.4.3 (2011-06-02) ==
 * Resolved [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=12 issue@ELabs #12], added Content Assist preference page. 
   * Options: Completion insert/override; Single proposals automatic insert; Auto-Activation enable and delay;
   * Added Content Assist proposal auto-insertion trigger characters: ' ', '=', ';', '.'.  
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=31 issue@ELabs #31]: Indent auto edit: full indent deletion is incorrectly triggered on certain positions.
 * Fixed some shortcomings related to auto indent in lines that started with comments.
 * Resolved [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=30 issue@ELabs #30], changed implementation of editor folding to a newer API:
   * Now the editor can fold non-DDoc comments as well (a previous limitation).
   * Now the editor can fold unittests and conditional declarations (debug/version).
   * Added folding preference page, can now configure the initial state (folded or not) of each folding group.
   * The folding groups/kinds are now: comments, DDoc comments, module header comments, aggregate types, functions, unittests, conditional declarations.
 * Fixed minor source range bugs for template references and typeof() references.
 * `is` and `!is` now correctly considered as keywords for the purposes of syntax highlighting.
   * `!in` is fully highlighted, instead of just `in`.
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=41 issue@ELabs #41] and some other related parsing bugs with qualified expressions (DotIdExp).
 * Fixed issue where syntax highlighting would break when typing inside a multi-line r"" string.
 
== DDT 0.4.2 (2011-04-29) ==
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=33 issue@ELabs #33], bug with spaces in projects names: made all variables in DMD response file resolve to quote escaped values.
 * Fixed bug where all D comments where considered DDoc comments for documentation hover.
 * Fixed limitation where problem hovers where not more prioritary than documentation hovers.
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=37 issue@ELabs #37]: F2 always brings up empty documentation hover.
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=38 issue@ELabs #38]: autocomplete crashing / very slow. (Content Assist takes very long to show up when many completion options are available)
 * Added support for editor code templates in Content Assist. 
 * Fixed bug in cast expression, where the cast type reference was ignored by the parser/semantic-engine; 
 * Fixed bug where DDoc comments where not associated with the corresponding symbol definition if that definition had protection, storage, linkage, or certain other kinds of attributes;
 * Implemented [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=35 issue@ELabs #35]: format immutable keyword and @annotations.
    * Added (nothrow, pure, shared, immutable) keywords to syntax coloring
    * Added @annotations to syntax coloring (spaces after @ not supported, any identifier accepted)
    * Changed syntax coloring example in preferences
 * Fixed minor Content Assist bug where completions would not appear when requested on certain syntax errors.

== DDT 0.4.1 (2011-03-04) ==
 * Fixed some parser bugs. (mostly relating to Template Instance references and source with invalid syntax)
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=25 issue@ELabs #25] and other source highlighting bugs (like nested comments being lexed as non-nested comments). 
   * Also added additional syntax highlighting options for WYSIWYG strings, delimited strings, and character literals.
 * Fixed a bug due to reuse of a single instance of the editor source-highlighting & folding parser. 
   * This bug may have been manifested in obscure, unknown, and/or hard to replicate ways.
 * Fixed [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=17 issue@ELabs #17], [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=18 issue@ELabs #18], [http://code.google.com/a/eclipselabs.org/p/ddt/issues/detail?id=20 issue@ELabs #20], all related to editor auto edits. Properly implemented:
   * Editor auto-edits (smart indenting/deindenting according to block structure), added "Typing" preference page.

== DDT 0.4.0 (2010-11-17) ==
 * Renamed project to DDT
 * Updated IDE to latest DLTK version (2.0).
 * Fixed comment indentation character (was '#' instead of '//') on toggle comment actions 
 * Fixed defaults bug in DeeRootPreferencePage and DeeEditorPreferencePage.
 * Added DEEBUILDER.COMPILEREXEPATH variable to builder, changed builder response file defaults.
 * Fixed parser to be able to parse expressions as the argument of typeid.
 * Added a parser workaround to allow parsing D source with annotations.
 * Fixed several parser bugs.
 * Removed Content Assist Templates preference page.
 
== Mmrnmhrm 0.3.1 (2010-04-12) ==
 * Updated IDE to latest DLTK version (1.0), fixed bugs related to DLTK version migration.
 * Added Eclipse feature and update-site (so now supports automatic updating).
 * Updated support for new folder layout in newer DMD compiler installations.
 * Added D perspective.

== Mmrnmhrm 0.3.0 (2008-10-09) ==
 * Updated IDE to latest DLTK version (1.0M2), and also to Eclipse 3.4.
 * Minor builder changes. Added $DEEBUILDER.COMPILERPATH builder flag for compiler executable location.
 * Implemented initial DLTK Type Hierarchies implementation. Supertype hierarchy viewing should work ok, but subtype hierarchy is not, needs further work on part of DLTK. (Type Hierarchy View is available by pressing F4, Type Hierarchy Pop-up is available by pressing Ctrl-T).
 * Minor fixes to the search engine (searching for classes and functions should work better now, as well as Open-Type)
 * Added auto edit strategies: smarter indentation on enter presses, copy&paste, etc. There may still be some kinks.


== Mmrnmhrm 0.2.2 (2007-11-13) ==
 * Fixed dependency on the org.junit plugin, and consequently on JDT.
 * Fixed SWT debug colors allways on.
 * Fixed Source Coloring preference page "Basic types" entry bug.
 * Removed unused DTLK project script builder (fix only takes effect on new projects).
 * Rethought and implemented the integrated project builder, based on a simple IDE-managed response file. It should be ready for use now.

== Mmrnmhrm 0.2.1 (2007-10-23) ==
 * Fixed major bug with document syntax highlighting and partitions.
 * Improved name lookup: statement blocks and enum bodies are now supported correctly (they don't see forward definitions anymore).
 * Improved Code completion: duplicates or occluded names are no longer presented.
 * Can now set, view, and remove Descent-compatible breakpoints in Mmrnmhrm's editor (these will work with Descent's debugger).
 * DDoc text and code completion hovers are now processed and presented as HTML instead of raw characters, thanks to Ary Mazana's Descent DDoc parser. ([http://svn.dsource.org/projects/descent/downloads/images/mmrnmhrm_html_ddoc_hover2.png pic])
 * Fixed some Neo AST bugs.
 * Minor builder changes (builder still work in progress).

== Mmrnmhrm 0.2.0 (2007-09-18) ==

 * Major rewrite of Mmrnmhrm to use the DTLK framework.
 * Huge Model improvements:
  * Rich JDT-like project model, (with build path support for source and zip folders, local and external libraries, build path variables and containers, build path access rules, as well as UI boilerplate code for build path management and navigation)
  * Supports caching and indexing (improved performance in large projects)
  * Supports resource delta processing (no more need for manual refreshing)
  * Added support for DMD+Phobos install location and Standard Library
 * Updated the parser to latest Descent parser (now supports D 2.0)
 * Added editor folding
 * Added JDT-like Quick Outline
 * Added JDT-like Open Type Dialog
 * Selections in selective imports no longer considered definitions, they are now considered references. This behavior is now according to the spec.
 * Added special code completion context for module names in imports (completion shows available modules for importing).
 * Added special code completion context for name selections in selective imports (completion shows available names for selection).
 * Added initial semantic search: 
   * Search for definitions based on a text pattern.
   * Search for all references to a given definition.
 * Added very basic builder support (using BUD (http://www.dsource.org/projects/build))
 * Added very basic launch support (debugging not supported)

== Mmrnmhrm 0.1 - (2007-08-17) ==
Initial public release 

 * New Project Wizard  
 * Very basic D Project Model (src-folders only, uncached, no resource listening)
 * Project Configuration Page
 * D Editor:
  * Syntax Highlighting
  * Content Outline
 * Syntax Highlighting configuration page
 * Find Definition: Locates any definition unit: Module, class, struct/union, variable, function parameter, template, template parameter, alias, typedef, named enums, enum members, unnamed enum members, named mixins, import aliases, import selections. Unsupported:
   * Searching inside unnamed mixins, and the scope of the with() statement.
   * Special reference targets: goto labels, version/debug identifiers.
   * Most expression reference nodes (including function calls).
   * Special references (new, delete, this, super).
   * Some native references (int, void, arrays, functions, etc.).
   * Function or template overload resolution (if there are several matches, lists all homonyms).
 * Basic Code Completion
   * with some minor syntax recovery
 * An AST Viewer (for IDE debugging purposes only)
