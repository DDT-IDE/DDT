<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Ant script for automated release and deploy of update site.
     Sample usage:
     ant -f repo-release-script.xml uploadPreReleaseRepo -DcommitLog="new daily"
     ====================================================================== -->
<project name="project" >

	<property name="repoSrc" location="bin-maven/ddt.feature-repository/repository" />

	<property name="gitLocation">git</property>
	
	
	<target name="echoInfo">
		<echo>${commitLog}</echo>
		<echo>${repoSrc}</echo>
	</target>
	
	<target name="setPreReleaseSite" depends="">
		<property name="repoDest" location="../ddt.updates-PR/ddt.feature-repo" />
	</target>
	
	<target name="setReleaseSite" depends="">
		<property name="repoDest" location="../ddt.updates/ddt.feature-repo" />
	</target>


	<target name="uploadPreReleaseRepo" depends="setPreReleaseSite, uploadRepo"/>
	<target name="uploadReleaseRepo" depends="setReleaseSite, uploadRepo" />
	
	
	<target name="_check.repoDest">
		<fail message="Files are missing.">
			<condition>
				<not>
					<available file="${repoDest}" type="dir" />
				</not>
			</condition>
		</fail>
		<echo>${repoDest}</echo>
	</target>
	
	<target name="uploadRepo" depends="echoInfo, _check.repoDest">
		<fail unless="commitLog"/>

		<delete verbose="true">
			<fileset dir="${repoDest}" includes="**/*.jar"/>
		</delete>
		<copy verbose="true" todir="${repoDest}">
			<fileset dir="${repoSrc}"/>
		</copy>
		
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="status"/>
		</exec>
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="add -A *"/>
		</exec>
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="commit -m"/>
			<arg value="${commitLog}"/>
		</exec>
		<exec dir="${repoDest}" executable="${gitLocation}" >
			<arg line="push origin"/>
		</exec>
	</target>

	
	<!-- ======================================================================
		This task must be run from within eclipse, example:
		eclipse -application org.eclipse.ant.core.antRunner -console -consolelog \
		-f repo-release-script.xml createCompositeRepo -DrepoDest=../ddt.updates-PR
	     ====================================================================== -->
	<target name="createCompositeRepo" depends="_check.repoDest">
		<p2.composite.repository>
			<repository location="${repoDest}" name="DDT repository" compressed="false" />
			<add>
				<repository location="http://download.eclipse.org/releases/indigo" />
				<repository location="ddt.feature-repo" />
			</add>
		</p2.composite.repository>
	</target>
	
</project>
